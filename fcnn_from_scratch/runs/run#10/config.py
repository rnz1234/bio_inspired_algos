import numpy as np
import logging

# basic log
DEBUG_READER = False#True

class VERBOSITY:
    PRIO1 = 0           # when BASIC_LOGGER_VERB = PRIO<N>, only prints with PRIO<1>...PRIO<N> will be printed
    PRIO2 = 1
    PRIO3 = 2

BASIC_LOGGER_VERB = VERBOSITY.PRIO1

PRINT_LAST_EPOCH_RESULTS = True

# general log
# LOG_FILE_PATH = "log/nnfsc_log.txt"
# LOG_SEVERITY_LEVEL = logging.DEBUG
# logging.basicConfig(filename=LOG_FILE_PATH, level=LOG_SEVERITY_LEVEL)

# data source
DEBUG_READ_DUMMY_DATA = False

# reader
DEBUG_LIMIT_LINES_READ = True
DEBUG_NUM_OF_LINES_READ_LIMIT = 8000

# randomness control
np.random.seed(0)
np.random.seed(423)

# learning control
USE_DATA_STD_PRE_PROCESS = True
class DATA_AUGMENTATION_METHOD:
    NO_AUG = 0
    PROPABLISTIC_ZEROIZING = 1
USED_DATA_AUGMENTATION_POST_PRE_PROCESS_METHOD = DATA_AUGMENTATION_METHOD.NO_AUG
USED_DATA_AUGMENTATION_IN_PRE_PROCESS_METHOD = DATA_AUGMENTATION_METHOD.NO_AUG#PROPABLISTIC_ZEROIZING
DATA_PROPABLISTIC_ZEROIZING_PROB_TO_ZERO = 0.4

class INIT_METHOD:
    GAUSSIAN = 0
    UNIFORM = 1
    ZEROES = 2
USED_INIT_METHOD_W = INIT_METHOD.GAUSSIAN #GAUSSIAN

class WEIGHT_UPDATE_RULE:
    BASIC = 0
    WEIGHT_DECAY_L2 = 1
    WEIGHT_DECAY_L1 = 2

USED_INIT_METHOD_B = INIT_METHOD.ZEROES

USED_WEIGHT_UPDATE_RULE = WEIGHT_UPDATE_RULE.WEIGHT_DECAY_L2 #WEIGHT_DECAY_L2

USE_DROPOUT = True
DROPOUT_PROB = 0.5




# validation
if DEBUG_READ_DUMMY_DATA == False:
    DEBUG_TRACK_VALIDATION = True

############ methods
def DEBUG_PRINT(str_to_print, this_print_verb=VERBOSITY.PRIO3):
    if this_print_verb <= BASIC_LOGGER_VERB:
        print(str_to_print)
